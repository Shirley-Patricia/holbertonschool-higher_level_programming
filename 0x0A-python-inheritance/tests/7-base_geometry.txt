=======================
doctest to base geometry
=======================
this library only have sort_list.

Numbers int
===========
::
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>>bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    
::
    >>> bg.integer_validator("age", 2.5)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

::
    >>> bg.integer_validator("age", (3,))
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

::
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

::
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

::
    >>> bg.integer_validator("age", {5, 9})
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

Numbers >=0
===========
::
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

::
    >>> bg.integer_validator("age", -4)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

One argument
============

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

area
====

    >>> bg.area(5)
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented


String
======

    >>> bg.integer_validator("my_int", "hello")
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
::
    >>> bg.integer_validator("age", "25")
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

Boolean
=======
    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    